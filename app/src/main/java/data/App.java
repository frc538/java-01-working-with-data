/*
 * This Java source file was generated by the Gradle 'init' task.
 * (Multi-line comment)
 */
package data;

public class App {
    public static void main(String[] args) {
        // Comment (one-line)

        // Statements - end with a semicolon
        // Print a blank line
        // System.out.println();

        // Text - String - start/end with " (double quote) (always in pairs)
        // "" - empty string
        // Parameter, Argument - data that go into parentheses
        // \ - escape character
        // \" - print a quote
        // System.out.println("Hello, world! My \"name\" is Drew!");
        // System.out.println("I like to program!");

        // System.out.println("Hello");
        // String - double quotes ("")
        // System.out.println("2$H");

        // char - single quotes ('')
        // System.out.println('$');

        // int - Integer type
        // System.out.println(2);
        // System.out.println(0);
        // System.out.println(-2);

        // double - Real number
        // System.out.println(2.0);
        // System.out.println(2.5);
        // System.out.println(-0.1);

        // boolean - True/False 
        // System.out.println(true);
        // System.out.println(false);

        // Variables
        // A NAMED chunk of memory

        // Declaring a variable
        // String name;

        // Assign to a variable
        // "name GETS "Drew""
        // name = "Drew";

        // Declare AND Assign together
        // Initialize -> First time we assign to a variable
        // String name = "Drew";

        // Program runs sequentially
        // System.out.println(name);
        // System.out.println("name");
        // name = "Bob";
        // System.out.println(name);
        // System.out.println("name");

        // Variable names A-Z, a-z, 0-9, _
        // Cannot start with a number
        // Prefer camel case
        // String birthMonth = "June";

        // String month = "January";
        // System.out.println(month);
        // char letter = 'A';
        // System.out.println(letter);
        // int age = 20;
        // System.out.println(age);
        // double pi = 3.14;
        // System.out.println(pi);
        // boolean isJava = true;
        // System.out.println(isJava);
        // isJava = false;
        // System.out.println(isJava);

        // Implicitly type your variable
        // Java will assign the type for you
        // For now, avoid this pattern
        // var randomVariable = "A";

        // Raw Values --> Literals
        // System.out.println(true);

        // Integer - Operators
        // int number = 1;
        // System.out.println(number);

        // Unary negation operator
        // number GETS negated number
        // number = -number;
        // System.out.println(number);
        // double number = 0.5;
        // System.out.println(number);
        // number = -number;
        // System.out.println(number);

        // int a = 3;
        // int b = 5;
        // double a = 3.1;
        // double b = 2.5;
        
        // Addition - BINARY
        // int sum = a + b;
        // int sum = b + a;
        // double sum = a + b;
        // System.out.println(sum);

        // Subtraction - BINARY
        // int differenceOne = a - b;
        // int differenceTwo = b - a;
        // double differenceOne = a - b;
        // double differenceTwo = b - a;
        // System.out.println(differenceOne);
        // System.out.println(differenceTwo);

        // Multiplication - BINARY
        // int product = a * b;
        // int product = b * a;
        // double product = a * b;
        // System.out.println(product);

        // Coercion - treating one type as another IMPLICITLY
        // int integer = 5;
        // double realNumber = 2.1;
        // double sum = integer + realNumber;
        // System.out.println(sum);

        // Division
        // Integer Division - Remainder gets ignored
        // Must produce an integer
        // Result is ONLY the quotient
        // Happens with two integers
        // int a = 14;
        // int b = 5;
        // int quotientOne = a / b;
        // int quotientTwo = b / a;
        // System.out.println(quotientOne);
        // System.out.println(quotientTwo);

        // Real Division - With at least one real number
        // Must produce a real number
        // Works as expect - Calculator division
        // double a = 14.0;
        // double b = 5.0;

        // double quotientOne = a / b;
        // double quotientTwo = b / a;
        // System.out.println(quotientOne);
        // System.out.println(quotientTwo);

        // int a = 14;
        // double b = 5.0;
        // double quotientOne = a / b;
        // double quotientTwo = b / a;
        // System.out.println(quotientOne);
        // System.out.println(quotientTwo);

        // Modulus or Modulo Division
        // Going hand-in-hand with Integer Division
        // Works with integers or real numbers or a combination
        // int a = 14;
        // int b = 5;
        // int quotient = a / b;
        // int remainder = a % b;
        // System.out.println(quotient);
        // System.out.println(remainder);

        // double number = 5;
        // System.out.println(number);

        // Assignment
        // number = number + 2;
        // More common
        // number += 2;

        // Adds 1 (without assignment operator)
        // Increment Operators
        // Postfix
        // number++;
        // Prefix
        // ++number;

        // number = number * 10;
        // number *= 10;

        // number = number - 3;
        // number -= 3;
        // number += -3;

        // Subtracts 1 (without assignment operator)
        // Decrement
        // Postfix
        // number--;
        // Prefix
        // --number;

        // Reassigns the quotient - FOR INTEGER VARIABLES
        // For real number variables - regular division
        // number = number / 2;
        // number /= 2;

        // Reassigns the remainder
        // number = number % 2;
        // number %= 2;

        // System.out.println(number);

        // double x = -10;
        // Square Root - will give NaN for negative numbers
        // double value = Math.sqrt(x);
        // Absolute Value
        // double value = Math.abs(x);
        // double value = Math.sin(x);
        // System.out.println(value);
        // System.out.println(x);
        // Using the function directly
        // System.out.println(Math.abs(x));

        // double a = 3.0;
        // double b = 2.0;

        // double power = Math.pow(a, b);
        // double power = Math.pow(b, a);
        // double power = Math.pow(2, 0.5);
        // System.out.println(power);
        // System.out.println(Math.sqrt(2));

        // Boolean Operations

        // Unary - NOT
        // boolean a = false;
        // System.out.println(a);

        // ! - BANG, NOT
        // NOT - takes the opposite
        // boolean b = !a;
        // a GETS NOT a
        // Change true to false, OR, false to true
        // a = !a;
        // System.out.println(a);

        // Binary
        // boolean a = false;
        // boolean b = true;

        // LOGICAL AND (PREFER)
        // Short-circuit - if the first is false, the whole thing is false
        // Take two values
        // Both are true -> True
        // Otherwise -> False
        // boolean result = a && b;
        // System.out.println(result);

        // Bitwise AND
        // Cannot short circuit
        // Gives same results
        // boolean result = a & b;
        // System.out.println(result);

        // boolean a = false;
        // boolean b = true;

        // LOGICAL OR
        // Short-circuit - if the first is true, the whole thing is true
        // Take two values
        // At least one true -> True
        // Otherwise -> False
        // boolean result = a || b;
        // System.out.println(result);

        // Bitwise OR
        // Cannot short circuit
        // Gives the same results
        // boolean result = a | b;
        // System.out.println(result);

        // Exclusive OR (XOR)
        // BITWISE ONLY
        // Exactly one true -> True
        // Otherwise -> False

        // boolean a = false;
        // boolean b = false;
        // boolean result = a ^ b;
        // System.out.println(result);

        // int a = 4;
        // int b = 7;
        // int resultOne = a & b;
        // int resultTwo = a | b;
        // int resultThree = a ^ b;
    }
}
